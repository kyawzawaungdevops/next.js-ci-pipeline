name: Next.js Landing Page CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os}}-build-
 }}-
  
  build:  # The new job to reuse the cache
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js with cache
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm' # This still needs to be here for validation
      - name: Restore node modules
        id: restore-npm-cache 
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock. }}-build-${{ env.cache-name }}-
            ${{ runner }}-
      - name: Verify cache restoration
        if: steps.restore-npm-cache.outputs.cache-hit != 'true'
        run: echo "Error: npm cache not found" && exit 1 # Exit if cache wasn't found

      # ... Your other build steps (test, build, deploy) ...
